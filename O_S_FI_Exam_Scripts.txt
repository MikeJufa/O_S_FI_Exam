SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$ ###0.00;-$ ###0.00';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:μ;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';


//Two Languages for selection.
[Selected Language]:
Load * Inline
[
"Selected Language"
English
Français
]
;

Translation:
Load * Inline
[
Index, Text2Translate, Français, English
1, tTotalRevenue, Revenu total, Total Revenue
2, tRoomRevenue, Revenu de la chambre, Room Revenue
3, tFoodRevenue, Revenus alimentaires, Food Revenue
4, t#ofClients, # de clients, # of Clients
5, t#ofDays, # de jours, # of Days
6, t#ofRooms, # de chambres, # of Rooms
7, tAvgRevenueClient, Revenu moyen/client, Average Revenue/Client
8, tAvgRevenueDay, Revenu moyen/jour, Average Revenue/Day
9, tAvgRevenueRoom, Revenu moyen/chambre, Average Revenue/Room
10, tRevenuePerformance%, Chiffre d'affaires %, Revenue Performance %
11, tRoomPerformance%, Chambre Performance %, Room Performance %
12, tHotelKPIDashboard, Tableau de bord KPI de gestion hôtelière (données actualisées, Hotel Management KPI Dashboard (data refreshed on
13, tHotelRoomsAnalysis, Analyse des chambres d'hôtel (données actualisées, Hotel Rooms Analysis (data refreshed on
14, tHotelFoodOrdersAnalysis, Analyse des commandes de nourriture dans les hôtels (données actualisées, Hotel Food Orders Analysis (data refreshed on
]
;



//Mapping Table of Rooms
Mapping_Room_Price_Per_Day:
Mapping LOAD [type], [price/day]
FROM [lib://DataFiles/EnRooms.csv]
(txt, codepage is 28591, embedded labels, delimiter is '|', msq)
;

//Mapping Menu Price
Mapping_Menu_Price:
Mapping Load id, price
FROM [lib://DataFiles/EnMenu.csv]
(txt, codepage is 28591, embedded labels, delimiter is '|', msq)
;

//Mapping Food Category
Mapping_Menu_Category:
Mapping Load id, category
FROM [lib://DataFiles/EnMenu.csv]
(txt, codepage is 28591, embedded labels, delimiter is '|', msq)
;

//Mapping Food Name
Mapping_Menu_Name:
Mapping Load id, name
FROM [lib://DataFiles/EnMenu.csv]
(txt, codepage is 28591, embedded labels, delimiter is '|', msq)
;



EnBooking:
Load
      id as [BookingID]
    , room as [Booking Room]
    , If(Year("start date")<2000,AddYears("start date",100),"start date") as [BookingStartDate]
    , If(Year("end date")<2000,AddYears("end date",100),"end date") as [BookingEndDate]
    , "request id" as [RequestID]
;
LOAD *
FROM [lib://DataFiles/EnBookings.csv]
(txt, utf8, embedded labels, delimiter is '|', msq);

ClientsEnRequests:
Load
      [RequestID]
    , Count([Booking Room]) as [Booking Room Number]
Resident EnBooking
Group by [RequestID]
;



Temp_EnBooking1:
Load "request id" as [RequestID]
;
LOAD *
FROM [lib://DataFiles/EnBookings.csv]
(txt, utf8, embedded labels, delimiter is '|', msq)
;

Join(ClientsEnRequests)

T1:
Load
      *
    , [RequestEndDate]-[RequestStartDate] as [Count Days]
Where Exists([RequestID])
;
LOAD
      "request id" as [RequestID]
    , "client name" as [Client Name]
    , ApplyMap('Mapping_Room_Price_Per_Day',Lower("room type"),'<N/A>') as [Price Per Day]
    , Capitalize(Replace("room type",'_',' ')) as [Room Type]
    , Capitalize("request type") as [Request Type]
    , "start date" as [RequestStartDate]
    , "end date" as [RequestEndDate]
    , #adults as [# of Adults]
    , #children as [# of Children]
FROM [lib://DataFiles/EnRequests.csv]
(txt, codepage is 28591, embedded labels, delimiter is '|', msq)
;

Drop Table Temp_EnBooking1;



Temp_EnBooking2:
Load "request id" as [RequestID]
;
LOAD *
FROM [lib://DataFiles/EnBookings.csv]
(txt, utf8, embedded labels, delimiter is '|', msq)
;

EnRequests:
Load
      *
    , [RequestEndDate]-[RequestStartDate] as [Count Days]
    , 1 as [Booking Room Number]
Where Not Exists([RequestID])
;
LOAD
      "request id" as [RequestID]
    , "client name" as [Client Name]
    , ApplyMap('Mapping_Room_Price_Per_Day',Lower("room type"),'<N/A>') as [Price Per Day]
    , Capitalize(Replace("room type",'_',' ')) as [Room Type]
    , Capitalize("request type") as [Request Type]
    , "start date" as [RequestStartDate]
    , "end date" as [RequestEndDate]
    , #adults as [# of Adults]
    , #children as [# of Children]
FROM [lib://DataFiles/EnRequests.csv]
(txt, codepage is 28591, embedded labels, delimiter is '|', msq)
;

Drop Table Temp_EnBooking2;


RequestDateTable:
Load
	  *
    , Month(RentedDay) as Month
    , Year(RentedDay) as Year
    , 'Q'&Ceil(Month(RentedDay)/3) as Quarter
    , Date(MonthStart(RentedDay),'MMM-YY') as YearMonth
;
Load
	Date(mindate + IterNo()) as RentedDay
While mindate + IterNo() <= maxdate
;
Load
	 Min(RequestStartDate)-1 as mindate
    ,Max(RequestEndDate) as maxdate
Resident ClientsEnRequests
;

LinkTable:
IntervalMatch(RentedDay)
Load Distinct RequestStartDate, RequestEndDate Resident ClientsEnRequests
;

Left Join (LinkTable)
Load
	 RequestStartDate
    ,RequestEndDate
    ,RequestID
Resident ClientsEnRequests
;

Drop Fields RequestStartDate, RequestEndDate from LinkTable
;




EnFoodOrders:
Load
    *
    , Date(MonthStart([Food Order Date]),'MMM-YY') as YearMonth
;
Load
      "dest room" as [Food Order Destination Room]
    , "bill room" as [Food Order Bill Room]
    , "date" as [Food Order Date]
    , "time" as [Food Order Time]
    , "#orders" as [Food Order Qty]
    , "menu id" as [Food Order Menu ID]
    , ApplyMap('Mapping_Menu_Price',"menu id",'<N/A>') as [Food Order Menu Price]
    , ApplyMap('Mapping_Menu_Category',"menu id",'<N/A>') as [Food Order Category]
    , ApplyMap('Mapping_Menu_Name',"menu id",'<N/A>') as [Food Order Name]
;
LOAD *
FROM [lib://DataFiles/EnFood_orders.csv]
(txt, codepage is 28591, embedded labels, delimiter is '|', msq)
;
